name: Test triggered workflow

on:
  repository_dispatch:
    types: [trigger-workflow]

jobs:
  generate-blueprint:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Checkout terraform-aws-rds
        uses: actions/checkout@v4
        with:
          repository: dfds/terraform-aws-rds
          path: ./aws-rds-postgresql/aws-modules-rds
          ref: ${{ github.event.client_payload.release_tag }}
          token: ${{ secrets.AUTH_TOKEN }}

      - name: Build docker image
        working-directory: aws-rds-postgresql/aws-modules-rds/tools
        run: |
          docker build -t scaffold:latest .
        shell: bash

      - name: Run script
        run: |
          ls
          input=$(pwd)/aws-rds-postgresql/aws-modules-rds/
          output=$(pwd)/aws-rds-postgresql/generic/
          if [ -d $output ]; then
              rm -rf $output
          fi
          mkdir -p $output
        
          docker run -e RELEASE=${{ github.event.client_payload.release_tag }} -v $input:/input -v $output:/output scaffold:latest

        shell: bash

      - name: setup git config
        run: |
          # setup the username and email. I tend to use 'GitHub Actions Bot' with no email by default
          git config user.name "GitHub Actions Bot"
          git config user.email "<>"

      - name: commit
        run: |
          git status
          # Stage the file, commit and push
          git add $(pwd)/aws-rds-postgresql/generic/
          git commit -m "update blueprints for RDS module"
          git push
        
        
