name: Generate blueprints

on:
  workflow_dispatch:

defaults:
  run:
    shell: bash

jobs:
  Generate-files:
    runs-on: ubuntu-latest
    steps:
    # Get the latest Core module available from the public repo
      - name: Download Core module
        run: |
          input=$(pwd)/aws-rds/
          output=$(pwd)/aws-rds/basic/
          core_module_repo="https://github.com/dfds/terraform-aws-rds.git"

          git clone $core_module_repo core-module
          cp -r core-module/aws-modules-rds $input
          
          # Cleanup: Remove the temporary clone directory
          rm -rf core-module
        shell: bash
        
      - name: Checkout source code
        uses: actions/checkout@v4
      - name: build docker image
        working-directory: aws-rds/aws-modules-rds/tools
        run: |
          docker build -t scaffold:latest .
        shell: bash
        
      # TODO: Download the latest version of the Core module
      - name: Run script
        run: |
          input=$(pwd)/aws-rds/aws-modules-rds/
          output=$(pwd)/aws-rds/basic/
          if [ -d $output ]; then
              rm -rf $output
          fi
          mkdir -p $output
          docker run -v $input:/input -v $output:/output scaffold:latest
        shell: bash

      - name: setup git config
        run: |
          # setup the username and email. I tend to use 'GitHub Actions Bot' with no email by default
          git config user.name "GitHub Actions Bot"
          git config user.email "<>"

      - name: commit
        run: |
          git status
          # Stage the file, commit and push
          git add $(pwd)/aws-rds/basic/
          git commit -m "update blueprints for RDS module"
          git push
